name: Build Multi-Platform Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows executable
      run: |
        cd platforms/windows
        python -m PyInstaller s3_mounter_windows.spec --clean --noconfirm
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/HaioSmartApp.exe

  build-linux-normal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux executable (Normal)
      run: |
        cd platforms/linux
        pyinstaller s3_mounter.spec --clean --noconfirm
        mv ../../dist/HaioSmartApp ../../dist/HaioSmartApp-linux-x64
    
    - name: Upload Linux Normal artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-normal-executable
        path: dist/HaioSmartApp-linux-x64

  build-linux-compatible:
    runs-on: ubuntu-20.04  # Older Ubuntu for better compatibility
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Older Python for compatibility
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Check GLIBC version
      run: |
        echo "Building on system with GLIBC:"
        ldd --version | head -1
    
    - name: Build Linux executable (Compatible)
      run: |
        cd platforms/linux
        pyinstaller s3_mounter.spec \
          --clean \
          --noconfirm \
          --exclude-module=_tkinter \
          --exclude-module=tkinter
        mv ../../dist/HaioSmartApp ../../dist/HaioSmartApp-linux-compat
    
    - name: Check GLIBC requirements
      run: |
        echo "GLIBC requirements for compatible build:"
        objdump -T dist/HaioSmartApp-linux-compat | grep GLIBC | sort -V | tail -5 || true
    
    - name: Upload Linux Compatible artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-compatible-executable
        path: dist/HaioSmartApp-linux-compat

  build-linux-debian12:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build with Docker (Debian 12)
      run: |
        # Create Dockerfile for Debian 12
        cat > Dockerfile.debian12 << 'EOF'
        FROM debian:12
        
        RUN apt-get update && apt-get install -y \
            python3 \
            python3-pip \
            python3-venv \
            python3-dev \
            build-essential \
            binutils \
            && rm -rf /var/lib/apt/lists/*
        
        WORKDIR /app
        COPY requirements.txt .
        COPY src/ src/
        COPY platforms/linux/s3_mounter.spec platforms/linux/
        COPY resources/icons/ resources/icons/
        
        RUN python3 -m pip install --upgrade pip
        RUN python3 -m pip install -r requirements.txt
        RUN python3 -m pip install pyinstaller
        
        WORKDIR /app/platforms/linux
        RUN pyinstaller s3_mounter.spec --clean --noconfirm
        RUN mv ../../dist/HaioSmartApp ../../dist/HaioSmartApp-debian12
        EOF
        
        # Build Docker image and extract executable
        docker build -f Dockerfile.debian12 -t haiosmartapp-debian12 .
        docker create --name extract haiosmartapp-debian12
        docker cp extract:/app/dist/HaioSmartApp-debian12 ./
        docker rm extract
        
        # Create dist directory and move file
        mkdir -p dist
        mv HaioSmartApp-debian12 dist/
    
    - name: Upload Debian 12 artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-debian12-executable
        path: dist/HaioSmartApp-debian12

  build-appimage:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          python3-dev \
          fuse \
          libfuse2 \
          wget \
          desktop-file-utils
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Download AppImage tools
      run: |
        wget -O linuxdeploy-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget -O linuxdeploy-plugin-python-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-python/releases/download/continuous/linuxdeploy-plugin-python-x86_64.AppImage
        chmod +x *.AppImage
    
    - name: Create AppDir structure
      run: |
        mkdir -p HaioSmartApp.AppDir/usr/bin
        mkdir -p HaioSmartApp.AppDir/usr/share/applications
        mkdir -p HaioSmartApp.AppDir/usr/share/icons/hicolor/256x256/apps
        
        # Copy application files
        cp main_new.py HaioSmartApp.AppDir/usr/bin/
        cp requirements.txt HaioSmartApp.AppDir/usr/bin/
        cp haio-logo.png HaioSmartApp.AppDir/usr/share/icons/hicolor/256x256/apps/haiosmartapp.png
        
        # Create desktop file
        cat > HaioSmartApp.AppDir/usr/share/applications/haiosmartapp.desktop << 'EOF'
        [Desktop Entry]
        Type=Application
        Name=Haio Smart App
        Comment=Smart S3 mounting application
        Exec=main_new.py
        Icon=haiosmartapp
        Categories=Utility;Network;
        EOF
        
        # Create AppRun script
        cat > HaioSmartApp.AppDir/AppRun << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        export PATH="${HERE}/usr/bin:${PATH}"
        export PYTHONPATH="${HERE}/usr/lib/python3/site-packages:${PYTHONPATH}"
        cd "${HERE}/usr/bin"
        exec python3 main_new.py "$@"
        EOF
        chmod +x HaioSmartApp.AppDir/AppRun
    
    - name: Build AppImage
      run: |
        export LINUXDEPLOY_PLUGIN_PYTHON_APPIMAGE=linuxdeploy-plugin-python-x86_64.AppImage
        ./linuxdeploy-x86_64.AppImage \
          --appdir HaioSmartApp.AppDir \
          --plugin python \
          --output appimage
        
        # Rename to consistent name
        mv Haio_Smart_App-*.AppImage HaioSmartApp.AppImage
    
    - name: Upload AppImage artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-appimage
        path: HaioSmartApp.AppImage

  create-release-assets:
    if: github.event_name == 'release'
    needs: [build-windows, build-linux-normal, build-linux-compatible, build-linux-debian12, build-appimage]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create release packages
      run: |
        mkdir -p release-packages
        
        # Windows
        cp windows-executable/HaioSmartApp.exe release-packages/HaioSmartApp-windows-x64.exe
        
        # Linux variants
        cp linux-normal-executable/HaioSmartApp-linux-x64 release-packages/
        cp linux-compatible-executable/HaioSmartApp-linux-compat release-packages/
        cp linux-debian12-executable/HaioSmartApp-debian12 release-packages/
        cp linux-appimage/HaioSmartApp.AppImage release-packages/
        
        # Create checksums
        cd release-packages
        sha256sum * > checksums.txt
        ls -la
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: release-packages/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-builds:
    needs: [build-linux-normal, build-linux-compatible, build-linux-debian12]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-image: 
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "debian:11"
          - "debian:12"
          - "fedora:38"
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Test compatibility
      run: |
        echo "Testing on ${{ matrix.test-image }}"
        
        # Test compatible build
        docker run --rm -v $(pwd)/linux-compatible-executable:/app ${{ matrix.test-image }} bash -c "
          apt-get update -qq && apt-get install -y libc6 > /dev/null 2>&1 || yum install -y glibc > /dev/null 2>&1 || true
          chmod +x /app/HaioSmartApp-linux-compat
          /app/HaioSmartApp-linux-compat --version 2>&1 || echo 'Version check not available'
          echo 'Compatibility test passed for ${{ matrix.test-image }}'
        " || echo "Failed on ${{ matrix.test-image }}"
